#!/bin/bash

readonly state_ok=0
readonly state_warning=1
readonly state_critical=2
readonly state_unknown=3

#
# Print arguments joined by delimiter
#
# Arguments:
# - delim: Delimiter; may have multiple characters
# - args...: Values
#
# Source: https://stackoverflow.com/a/17841619
#
join_args() {
  local delim="$1"; shift
  if [[ "$#" -gt 0 ]]; then
    echo -n "$1"; shift
    if [[ "$#" -gt 0 ]]; then
      printf "%s" "${@/#/$delim}"
    fi
  fi
}

#
# Check whether the arguments are integers
#
validate_integer() {
  for i; do
    if ! [[ "$i" =~ ^-?[0-9]+$ ]]; then
      echo "\"$i\" not recognized as an integer" >&2
      return 1
    fi
  done

  return 0
}

#
# Merge exit status
#
# Warning wins over OK, critical wins over warning
#
# Arguments:
# - Current value
# - Desired value
#
merge_status() {
  local cur="$1" update="$2"

  if (( cur < update )); then
    echo $update
  else
    echo $cur
  fi
}

run_oc() {
  local cfgfile="$1"; shift

  # See https://github.com/openshift/origin/issues/9581
  HOME=/ \
  /usr/bin/oc \
    --config="$cfgfile" \
    --namespace=default \
    "$@"
}

#
# Print result in Nagios-compatible format and terminate process
#
# Arguments:
# - exit_status: Status code
# - output: Human-readable output
# - metrics: Metrics for Nagios-compatible monitoring systems
#
finish() {
  local exit_status="$1"
  local output="$2"
  local metrics="$3"
  local prefix=UNKNOWN

  case "$exit_status" in
    $state_ok)
      prefix=OK
      ;;
    $state_warning)
      prefix=WARNING
      ;;
    $state_critical)
      prefix=CRITICAL
      ;;
    *)
      exit_status=$state_unknown
      ;;
  esac

  echo "$prefix${output:+ $output}${metrics:+ | $metrics}"
  exit $exit_status
}

# vim: set sw=2 sts=2 et :
