#

template CheckCommand "openshift-sudo-command" {
  command = ["/usr/bin/sudo", "-n", "-u", "$sudo_user$"]
  vars.sudo_user = "nobody"
}

template CheckCommand "openshift-arg-config-file" {
  arguments += {
    "-f" = {
      value    = "$oc_config_file$"
      required = true
      order    = -100
    }
  }
}

template CheckCommand "openshift-arg-config-file-py" {
  arguments += {
    "--config" = {
      value    = "$oc_config_file$"
      required = true
      order    = -100
    }
  }
}

template CheckCommand "openshift-arg-namespace" {
  arguments += {
    "-n" = {
      value    = "$openshift_namespace$"
      required = true
      order    = -90
    }
  }
}

template CheckCommand "openshift-arg-selector" {
  arguments += {
    "-s" = {
      value    = "$openshift_selector$"
      required = true
      order    = -80
      set_if   = {{ len(macro("$openshift_selector$")) > 0 }}
    }
  }
}

template CheckCommand "openshift-arg-endpoint-py" {
  arguments += {
    "--endpoint" = {
      value    = "$openshift_endpoint$"
      required = true
      order    = -100
    }
  }
}

template CheckCommand "openshift-arg-token-from-py" {
  arguments += {
    "--token-from" = {
      value    = "$openshift_token_file$"
      required = true
      order    = -90
    }
  }
}

template CheckCommand "openshift-arg-tenant-py" {
  arguments += {
    "--tenant" = {
      value    = "$openshift_tenant$"
      required = true
      order    = -80
    }
  }
}

template CheckCommand "openshift-arg-selector-py" {
  arguments += {
    "--selector" = {
      value    = "$openshift_selector$"
      required = true
      order    = -70
      set_if   = {{ len(macro("$openshift_selector$")) > 0 }}
    }
  }
}

template CheckCommand "openshift-arg-node-name" {
  arguments += {
    "-n" = {
      value = "$openshift_node_name$"
      required = true
      order = -50
    }
  }
}

object CheckCommand "openshift_node_list" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file"

  command += [PluginDir + "/check_openshift_node_list"]
  arguments += {
    "--" = {
      order = 2
    }
    "nodes" = {
      value    = "$openshift_node_names$"
      skip_key = true
      required = true
      order    = 3
    }
  }
}

object CheckCommand "openshift_pvc_phase" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file"

  command += [PluginDir + "/check_openshift_pvc_phase"]
}

object CheckCommand "openshift_project_phase" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file"

  command += [PluginDir + "/check_openshift_project_phase"]
}

object CheckCommand "openshift_pod_count" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file"
  import "openshift-arg-namespace"
  import "openshift-arg-selector"

  command += [PluginDir + "/check_openshift_pod_count"]
  arguments += {
    "-w" = {
      value = "$openshift_pod_count_warn$"
    }
    "-w" = {
      value = "$openshift_pod_count_crit$"
    }
  }
}

object CheckCommand "openshift_pod_node_alloc" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file"
  import "openshift-arg-namespace"
  import "openshift-arg-selector"

  command += [PluginDir + "/check_openshift_pod_node_alloc"]
}

object CheckCommand "openshift_node" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file"
  import "openshift-arg-node-name"

  command += [PluginDir + "/check_openshift_node"]
}

object CheckCommand "openshift_pod_status_count" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file-py"

  command += [PluginDir + "/check_openshift_pod_status_count"]
}

object CheckCommand "openshift_pv_avail" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file"

  command += [PluginDir + "/check_openshift_pv_avail"]
  arguments += {
    "-w" = {
      value = "$openshift_pv_avail_warn$"
      order = 10
    }
    "-c" = {
      value = "$openshift_pv_avail_crit$"
      order = 15
    }
    "--extra" = {
      skip_key = true
      value    = "$openshift_pv_avail_extra$"
      order    = 100
    }
  }
}

object CheckCommand "openshift_es_stats" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-endpoint-py"
  import "openshift-arg-token-from-py"

  command += [PluginDir + "/check_openshift_es_stats"]
  arguments += {
    "--fs-used-warn" = {
      value = "$openshift_es_fs_used_warn$"
    }
    "--fs-used-critical" = {
      value = "$openshift_es_fs_used_crit$"
    }
    "--jvm-heap-used-warn" = {
      value = "$openshift_es_jvm_heap_used_warn$"
    }
    "--jvm-heap-used-critical" = {
      value = "$openshift_es_jvm_heap_used_crit$"
    }
    "--cpu-usage-warn" = {
      value = "$openshift_es_cpu_usage_warn$"
    }
    "--cpu-usage-critical" = {
      value = "$openshift_es_cpu_usage_crit$"
    }
  }
}

object CheckCommand "openshift_pod_cpu_usage" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-endpoint-py"
  import "openshift-arg-token-from-py"
  import "openshift-arg-tenant-py"
  import "openshift-arg-selector-py"

  command += [PluginDir + "/check_openshift_pod_cpu_usage"]
  arguments += {
    "--interval" = {
      value = "$openshift_pod_cpu_interval$"
    }
    "--warning" = {
      value = "$openshift_pod_cpu_warn$"
    }
    "--critical" = {
      value = "$openshift_pod_cpu_crit$"
    }
    "--limit-warning" = {
      value = "$openshift_pod_cpu_limit_warn$"
    }
    "--limit-critical" = {
      value = "$openshift_pod_cpu_limit_crit$"
    }
  }
}

object CheckCommand "openshift_node_fluentd" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file"
  import "openshift-arg-namespace"
  import "openshift-arg-selector"

  command += [PluginDir + "/check_openshift_node_fluentd"]
}

object CheckCommand "openshift_pod_memory" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-endpoint-py"
  import "openshift-arg-token-from-py"
  import "openshift-arg-tenant-py"
  import "openshift-arg-selector-py"

  command += [PluginDir + "/check_openshift_pod_memory"]
  arguments += {
    "--interval" = {
      value = "$openshift_pod_memory_interval$"
    }
    "--limit-warning" = {
      value = "$openshift_pod_memory_limit_warn$"
    }
    "--limit-critical" = {
      value = "$openshift_pod_memory_limit_crit$"
    }
  }
}

object CheckCommand "openshift_hawkular_machine_timestamp" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-endpoint-py"
  import "openshift-arg-token-from-py"
  import "openshift-arg-tenant-py"

  timeout = 30

  command += [PluginDir + "/check_hawkular_machine_timestamp"]
  arguments += {
    "--machine" = {
      value = "$openshift_hawkular_timestamp_machine$"
      required = true
    }
    "-w" = {
      value = "$openshift_hawkular_timestamp_warn$"
    }
    "-c" = {
      value = "$openshift_hawkular_timestamp_crit$"
    }
  }
}

object CheckCommand "openshift_node_resources" {
  import "plugin-check-command"
  import "openshift-sudo-command"
  import "openshift-arg-config-file-py"
  import "openshift-arg-node-name"

  command += [PluginDir + "/check_openshift_node_resources"]
  arguments += {
    "cpu-limits-warn" = {
      key = "-w"
      value = "cpu-limits=$openshift_node_cpu_limits_warn$"
      set_if = {{ len(macro("$openshift_node_cpu_limits_warn$")) > 0 }}
    }
    "cpu-limits-critical" = {
      key = "-c"
      value = "cpu-limits=$openshift_node_cpu_limits_critical$"
      set_if = {{ len(macro("$openshift_node_cpu_limits_critical$")) > 0 }}
    }
    "cpu-requests-warn" = {
      key = "-w"
      value = "cpu-requests=$openshift_node_cpu_requests_warn$"
      set_if = {{ len(macro("$openshift_node_cpu_requests_warn$")) > 0 }}
    }
    "cpu-requests-critical" = {
      key = "-c"
      value = "cpu-requests=$openshift_node_cpu_requests_critical$"
      set_if = {{ len(macro("$openshift_node_cpu_requests_critical$")) > 0 }}
    }
    "memory-limits-warn" = {
      key = "-w"
      value = "memory-limits=$memory_limits_warn$"
      set_if = {{ len(macro("$memory_limits_warn$")) > 0 }}
    }
    "memory-limits-critical" = {
      key = "-c"
      value = "memory-limits=$openshift_node_memory_limits_critical$"
      set_if = {{ len(macro("$openshift_node_memory_limits_critical$")) > 0 }}
    }
    "memory-requests-warn" = {
      key = "-w"
      value = "memory-requests=$openshift_node_memory_requests_warn$"
      set_if = {{ len(macro("$openshift_node_memory_requests_warn$")) > 0 }}
    }
    "memory-requests-critical" = {
      key = "-c"
      value = "memory-requests=$openshift_node_memory_requests_critical$"
      set_if = {{ len(macro("$openshift_node_memory_requests_critical$")) > 0 }}
    }
  }
}

object CheckCommand "openshift_endtoend_result" {
  import "plugin-check-command"
  import "openshift-sudo-command"

  timeout = 30

  command += [PluginDir + "/check_openshift_endtoend_result"]
  arguments += {
    "statusdir" = {
      value = "$openshift_endtoend_statusdir$"
      required = true
      skip_key = true
    }
  }
}

# vim: set sw=2 sts=2 et :
